import { z } from 'zod'
import { randomUUID } from 'crypto'

const actionTypeValueSchema = z.array(z.object({
	action_type: z.string(),
	value: z.number()
})).nullish()

// based on docs at https://developers.facebook.com/docs/marketing-api/reference/ad-campaign-group/insights/
const metrics = Object.entries({
	// String fields
	'account_currency': z.string().nullish(),
	'account_name': z.string().nullish(),
	'activity_recency': z.string().nullish(),
	'ad_format_asset': z.string().nullish(),
	'ad_name': z.string().nullish(),
	'adset_name': z.string().nullish(),
	'age_targeting': z.string().nullish(),
	'attribution_setting': z.string().nullish(),
	'buying_type': z.string().nullish(),
	'campaign_name': z.string().nullish(),
	'coarse_conversion_value': z.string().nullish(),
	'country': z.string().nullish(),
	'created_time': z.string().nullish(),
	'date_start': z.string().nullish(),
	'date_stop': z.string().nullish(),
	'device_platform': z.string().nullish(),
	'dma': z.string().nullish(),
	'fidelity_type': z.string().nullish(),
	'frequency_value': z.string().nullish(),
	'gender_targeting': z.string().nullish(),
	'hourly_stats_aggregated_by_advertiser_time_zone': z.string().nullish(),
	'hourly_stats_aggregated_by_audience_time_zone': z.string().nullish(),
	'hsid': z.string().nullish(),
	'impression_device': z.string().nullish(),
	'labels': z.string().nullish(),
	'landing_destination': z.string().nullish(),
	'location': z.string().nullish(),
	'objective': z.string().nullish(),
	'optimization_goal': z.string().nullish(),
	'place_page_id': z.string().nullish(),
	'place_page_name': z.string().nullish(),
	'platform_position': z.string().nullish(),
	'postback_sequence_index': z.string().nullish(),
	'product_id': z.string().nullish(),
	'publisher_platform': z.string().nullish(),
	'redownload': z.string().nullish(),
	'result_values_performance_indicator': z.string().nullish(),
	'shops_assisted_purchases': z.string().nullish(),
	'skan_version': z.string().nullish(),
	'updated_time': z.string().nullish(),
	'user_segment_key': z.string().nullish(),

	// Number fields
	'account_id': z.number().nullish(),
	'ad_id': z.number().nullish(),
	'adset_id': z.number().nullish(),
	'auction_bid': z.number().nullish(),
	'auction_competitiveness': z.number().nullish(),
	'auction_max_competitor_bid': z.number().nullish(),
	'campaign_id': z.number().nullish(),
	'clicks': z.number().nullish(),
	'cost_per_dda_countby_convs': z.number().nullish(),
	'cost_per_inline_link_click': z.number().nullish(),
	'cost_per_inline_post_engagement': z.number().nullish(),
	'cost_per_unique_click': z.number().nullish(),
	'cost_per_unique_inline_link_click': z.number().nullish(),
	'cpc': z.number().nullish(),
	'cpm': z.number().nullish(),
	'cpp': z.number().nullish(),
	'ctr': z.number().nullish(),
	'dda_countby_convs': z.number().nullish(),
	'estimated_ad_recall_rate_lower_bound': z.number().nullish(),
	'estimated_ad_recall_rate_upper_bound': z.number().nullish(),
	'estimated_ad_recallers_lower_bound': z.number().nullish(),
	'estimated_ad_recallers_upper_bound': z.number().nullish(),
	'frequency': z.number().nullish(),
	'full_view_impressions': z.number().nullish(),
	'full_view_reach': z.number().nullish(),
	'impressions': z.number().nullish(),
	'inline_link_click_ctr': z.number().nullish(),
	'inline_link_clicks': z.number().nullish(),
	'inline_post_engagement': z.number().nullish(),
	'instagram_upcoming_event_reminders_set': z.number().nullish(),
	'instant_experience_clicks_to_open': z.number().nullish(),
	'instant_experience_clicks_to_start': z.number().nullish(),
	'marketing_messages_delivery_rate': z.number().nullish(),
	'qualifying_question_qualify_answer_rate': z.number().nullish(),
	'reach': z.number().nullish(),
	'social_spend': z.number().nullish(),
	'spend': z.number().nullish(),
	'wish_bid': z.number().nullish(),

	// All fields with action_type/value pattern
	'action_values': actionTypeValueSchema,
	'actions': actionTypeValueSchema,
	'ad_click_actions': actionTypeValueSchema,
	'ad_impression_actions': actionTypeValueSchema,
	'catalog_segment_actions': actionTypeValueSchema,
	'catalog_segment_value': actionTypeValueSchema,
	'catalog_segment_value_mobile_purchase_roas': actionTypeValueSchema,
	'catalog_segment_value_omni_purchase_roas': actionTypeValueSchema,
	'catalog_segment_value_website_purchase_roas': actionTypeValueSchema,
	'conversion_values': actionTypeValueSchema,
	'conversions': actionTypeValueSchema,
	'converted_product_quantity': actionTypeValueSchema,
	'converted_product_value': actionTypeValueSchema,
	'cost_per_15_sec_video_view': actionTypeValueSchema,
	'cost_per_2_sec_continuous_video_view': actionTypeValueSchema,
	'cost_per_action_type': actionTypeValueSchema,
	'cost_per_ad_click': actionTypeValueSchema,
	'cost_per_conversion': actionTypeValueSchema,
	'cost_per_one_thousand_ad_impression': actionTypeValueSchema,
	'cost_per_outbound_click': actionTypeValueSchema,
	'cost_per_thruplay': actionTypeValueSchema,
	'cost_per_unique_action_type': actionTypeValueSchema,
	'cost_per_unique_conversion': actionTypeValueSchema,
	'cost_per_unique_outbound_click': actionTypeValueSchema,
	'instant_experience_outbound_clicks': actionTypeValueSchema,
	'interactive_component_tap': actionTypeValueSchema,
	'mobile_app_purchase_roas': actionTypeValueSchema,
	'outbound_clicks': actionTypeValueSchema,
	'outbound_clicks_ctr': actionTypeValueSchema,
	'purchase_roas': actionTypeValueSchema,
	'video_30_sec_watched_actions': actionTypeValueSchema,
	'video_avg_time_watched_actions': actionTypeValueSchema,
	'video_continuous_2_sec_watched_actions': actionTypeValueSchema,
	'video_p100_watched_actions': actionTypeValueSchema,
	'video_p25_watched_actions': actionTypeValueSchema,
	'video_p50_watched_actions': actionTypeValueSchema,
	'video_p75_watched_actions': actionTypeValueSchema,
	'video_p95_watched_actions': actionTypeValueSchema,
	'video_play_actions': actionTypeValueSchema,
	'video_time_watched_actions': actionTypeValueSchema,
	'website_ctr': actionTypeValueSchema,
	'website_purchase_roas': actionTypeValueSchema,

	// Types we don't support yet
	// 'body_asset': 'AdAssetBody',
	// 'comparison_node': 'AdsInsightsComparison',
	// 'dda_results': 'list<AdsInsightsDdaResult>',
	// 'description_asset': 'AdAssetDescription',
	// 'image_asset': 'AdAssetImage',
	// 'media_asset': 'AdAssetMedia',
	// 'rule_asset': 'AdAssetRule',
	// 'title_asset': 'AdAssetTitle',
	// 'video_asset': 'AdAssetVideo',
	// 'video_play_curve_actions': 'list<AdsHistogramStats>',
	// 'video_play_retention_0_to_15s_actions': 'list<AdsHistogramStats>',
	// 'video_play_retention_20_to_60s_actions': 'list<AdsHistogramStats>',
	// 'video_play_retention_graph_actions': 'list<AdsHistogramStats>'
})
.concat([	// some meta info that is not in the docs
	['account_id', z.string().nullish()],
	['ad_id', z.string().nullish()],
	['adset_id', z.string().nullish()],
])
.filter(([key, value]) => ![
	'age_targeting', 
	'gender_targeting', 
	'labels', 
	'location', 
	'estimated_ad_recall_rate_lower_bound', 
	'estimated_ad_recall_rate_upper_bound', 
	'estimated_ad_recallers_lower_bound', 
	'estimated_ad_recallers_upper_bound',
].includes(key))	// (#100) <fields in the list above> are not valid for fields param after V19.0
.filter(([key, value]) => ![
	'activity_recency', 
	'ad_format_asset', 
	'body_asset', 
	'comparison_node', 
	'country', 
	'description_asset', 
	'device_platform', 
	'dma', 
	'fidelity_type', 
	'hourly_stats_aggregated_by_advertiser_time_zone', 
	'hourly_stats_aggregated_by_audience_time_zone', 
	'hsid', 
	'image_asset', 
	'impression_device', 
	'landing_destination', 
	'media_asset', 
	'place_page_id', 
	'platform_position', 
	'product_id', 
	'publisher_platform', 
	'rule_asset', 
	'skan_version', 
	'title_asset', 
	'user_segment_key', 
	'video_asset', 
	'coarse_conversion_value', 
	'frequency_value', 
	'postback_sequence_index', 
	'redownload',
].includes(key))	// (#100) <fields in the list above> are not valid for fields param. please check https://developers.facebook.com/docs/marketing-api/reference/ads-insights/ for all valid values
.reduce((acc, [key, value]) => ({...acc, [key]: value}), {})

const metricNames = {
	'account_currency': 'Account Currency',
	'account_id': 'Account ID',
	'account_name': 'Account Name',
	'ad_id': 'Ad ID',
	'ad_name': 'Ad Name',
	'adset_id': 'Ad Set ID',
	'adset_name': 'Ad Set Name',
	'attribution_setting': 'Attribution Setting',
	'buying_type': 'Buying Type',
	'campaign_id': 'Campaign ID',
	'campaign_name': 'Campaign Name',
	'created_time': 'Created Time',
	'date_start': 'Date Start',
	'date_stop': 'Date Stop',
	'objective': 'Objective',
	'optimization_goal': 'Optimization Goal',
	'place_page_name': 'Place Page Name',
	'updated_time': 'Updated Time',
	'auction_bid': 'Auction Bid',
	'auction_competitiveness': 'Auction Competitiveness',
	'auction_max_competitor_bid': 'Auction Max Competitor Bid',
	'clicks': 'Clicks',
	'converted_product_quantity': 'Converted Product Quantity',
	'converted_product_value': 'Converted Product Value',
	'cost_per_15_sec_video_view': 'Cost per 15 Sec Video View',
	'cost_per_2_sec_continuous_video_view': 'Cost per 2 Sec Continuous Video View',
	'cost_per_ad_click': 'Cost per Ad Click',
	'cost_per_dda_countby_convs': 'Cost per DDA Count by Convs',
	'cost_per_inline_link_click': 'Cost per Inline Link Click',
	'cost_per_inline_post_engagement': 'Cost per Inline Post Engagement',
	'cost_per_one_thousand_ad_impression': 'Cost per One Thousand Ad Impression',
	'cost_per_outbound_click': 'Cost per Outbound Click',
	'cost_per_thruplay': 'Cost per Thruplay',
	'cost_per_unique_click': 'Cost per Unique Click',
	'cost_per_unique_conversion': 'Cost per Unique Conversion',
	'cost_per_unique_inline_link_click': 'Cost per Unique Inline Link Click',
	'cost_per_unique_outbound_click': 'Cost per Unique Outbound Click',
	'cpc': 'CPC',
	'cpm': 'CPM',
	'cpp': 'CPP',
	'ctr': 'CTR',
	'dda_countby_convs': 'DDA Count by Convs',
	'frequency': 'Frequency',
	'full_view_impressions': 'Full View Impressions',
	'full_view_reach': 'Full View Reach',
	'impressions': 'Impressions',
	'inline_link_click_ctr': 'Inline Link Click CTR',
	'inline_link_clicks': 'Inline Link Clicks',
	'inline_post_engagement': 'Inline Post Engagement',
	'instagram_upcoming_event_reminders_set': 'Instagram Upcoming Event Reminders Set',
	'instant_experience_clicks_to_open': 'Instant Experience Clicks to Open',
	'instant_experience_clicks_to_start': 'Instant Experience Clicks to Start',
	'instant_experience_outbound_clicks': 'Instant Experience Outbound Clicks',
	'interactive_component_tap': 'Interactive Component Tap',
	'marketing_messages_delivery_rate': 'Marketing Messages Delivery Rate',
	'outbound_clicks_ctr': 'Outbound Clicks CTR',
	'qualifying_question_qualify_answer_rate': 'Qualifying Question Qualify Answer Rate',
	'reach': 'Reach',
	'result_values_performance_indicator': 'Result Values Performance Indicator',
	'shops_assisted_purchases': 'Shops Assisted Purchases',
	'social_spend': 'Social Spend',
	'spend': 'Spend',
	'wish_bid': 'Wish Bid',
	'action_values': 'Action Values',
	'actions': 'Actions',
	'ad_click_actions': 'Ad Click Actions',
	'ad_impression_actions': 'Ad Impression Actions',
	'catalog_segment_actions': 'Catalog Segment Actions',
	'catalog_segment_value': 'Catalog Segment Value',
	'catalog_segment_value_mobile_purchase_roas': 'Catalog Segment Value Mobile Purchase ROAS',
	'catalog_segment_value_omni_purchase_roas': 'Catalog Segment Value Omni Purchase ROAS',
	'catalog_segment_value_website_purchase_roas': 'Catalog Segment Value Website Purchase ROAS',
	'conversion_values': 'Conversion Values',
	'conversions': 'Conversions',
	'cost_per_action_type': 'Cost per Action Type',
	'cost_per_conversion': 'Cost per Conversion',
	'cost_per_unique_action_type': 'Cost per Unique Action Type',
	'mobile_app_purchase_roas': 'Mobile App Purchase ROAS',
	'outbound_clicks': 'Outbound Clicks',
	'purchase_roas': 'Purchase ROAS',
	'video_30_sec_watched_actions': 'Video 30 Sec Watched Actions',
	'video_avg_time_watched_actions': 'Video Avg Time Watched Actions',
	'video_continuous_2_sec_watched_actions': 'Video Continuous 2 Sec Watched Actions',
	'video_p100_watched_actions': 'Video P100 Watched Actions',
	'video_p25_watched_actions': 'Video P25 Watched Actions',
	'video_p50_watched_actions': 'Video P50 Watched Actions',
	'video_p75_watched_actions': 'Video P75 Watched Actions',
	'video_p95_watched_actions': 'Video P95 Watched Actions',
	'video_play_actions': 'Video Play Actions',
	'video_time_watched_actions': 'Video Time Watched Actions',
	'website_ctr': 'Website CTR',
	'website_purchase_roas': 'Website Purchase ROAS',
}

const PERIODS = {
	'daily': 'daily',
	'lifetime': 'lifetime',
}

const BREAKDOWNS = [
	['age', 'gender'],
	['country', 'region']
]

export { metricNames }

export default {

	metrics,

	metricNames,

	schemas: Object.keys(PERIODS).reduce((acc, period) => {
		BREAKDOWNS.forEach((breakdown) => {
			const breakdownName = breakdown.join('_')
			const tableName = `facebook_ads_insights_${period}_${breakdownName}`
			acc[tableName] = z.object({
				// social network identifiers
				ad_account_id: z.string(),
				ad_id: z.string(),
				// our identifiers
				period: z.string().default(period),
				breakdowns: z.array(z.string()),
				uid: z.string().nullish().default(randomUUID),
				created_at: z.date().nullish().default(() => new Date()),
				// data
				insights: z.array(z.object({
					...metrics,
					...breakdown.reduce((acc, breakdown) => {
						acc[breakdown] = z.string().nullish()
						return acc
					}, {}),
				})),
			})
		})
		return acc
	}, {}),

}